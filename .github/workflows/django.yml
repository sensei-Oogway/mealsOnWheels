name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.10']

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: mealsOnWheelsV3
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5


    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Apply Migrations
      run: |
        python manage.py makemigrations
        python manage.py migrate
    - name: Run Tests
      run: |
        python manage.py test user_management_app 
        python manage.py test restaurant_management_app
  
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run ngrok tunnel
        uses: luisboto/ngrok-tunnel-action@v0.1.7.2
        with:
          timeout: 1h
          port: 5050
          ngrok_authtoken: 2gnlcO37ubi4CYQqMNVXeJ4d1nz_63h4RzwNocKstdMjN5Tj1
          tunnel_type: http
          save_url_to_filename: tunnelURL.md
  
      - name: Send Webhook Payload
        run: |
          # Read ngrok URL from the file
          NGROK_URL=$(cat tunnelURL.md)
          # Send a POST request to the ngrok URL with the webhook payload
          curl -X POST -H "Content-Type: application/json" -d '{"key": "value"}' "${NGROK_URL}/webhook"
