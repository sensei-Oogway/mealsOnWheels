name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  docker:
      name: Build container
      runs-on: ubuntu-latest
      steps:
        - name: "‚òÅÔ∏è checkout repository"
          uses: actions/checkout@v2
  
        - name: "üîß setup buildx"
          uses: docker/setup-buildx-action@v1
  
        - name: "üîß cache docker layers"
          uses: actions/cache@v2
          with:
            path: /tmp/.buildx-cache
            key: ${{ runner.os }}-buildx-${{ github.sha }}
            restore-keys: |
              ${{ runner.os }}-buildx-
  
        - name: "üîß docker meta"
          id: meta
          uses: docker/metadata-action@v3
          with:
            images: ${{ github.repository }}
            tags: latest
  
        - name: "üì¶ docker build"
          uses: docker/build-push-action@v2
          with:
            context: .
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
            outputs: type=docker,dest=/tmp/docker.tar
            push: false
            cache-from: type=gha, scope=${{ github.workflow }}
            cache-to: type=gha, scope=${{ github.workflow }}
  
        - name: "üìÇ docker artifacts"
          uses: actions/upload-artifact@v2
          with:
            name: docker
            path: /tmp/docker.tar
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.10']

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: mealsOnWheelsV3
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5


    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Apply Migrations
      run: |
        python manage.py makemigrations
        python manage.py migrate
    - name: Run Tests
      run: |
        python manage.py test user_management_app 
        python manage.py test restaurant_management_app

